* Ethernet Switching

** [7.1] Ethernet Frames
*** [7.1.1] Ethernet Encapsulation
    - ethernet is defined by the data link layer and pysical layer protocols
    - *802.3 is ethernet*
    - *802.11 is WLAN*
    - *802.15 is Bluetooth*
    - *802.2 is LLC*

*** [7.1.2] Data link sublayers
    IEEE 802 LAN/MAN use the following sublayers of the data link layer to operate.
    - LLC sublayer (802.2)
      + communicates between the *networking software at the upper layers and the device hardware at the lower layers*
      + places information in the frame that identifies whoch network layer protocol is being used for the frame
    - MAC sublayer (802.3, 802.11, or 802.15)
      + implemented in hardware and is responsible for *data encapsulation and media access control*
      + provides data link layer addressing and is integrated with various physcial layer technologies
    [[./media/llcmac.png]]

*** [7.1.3] MAC Sublayer
    reponsible for *data encapsulation and accessing the media*

**** Data encapsulation
    IEEE 802.3 data encapsulation includes the following
    - Ethernet frame
      + internal structure of the ethernet frame
    - Ethernet addressing
      + includes both the source and destination mac address to deliver the ethernet frame fromt ethernet NIC to ethernet NIC on the same LAN
    - Ethernet error detection
      + includes frame check sequence (FCS) trailer used for error detection

**** Accessing the media
    [[./media/ethernet-standards.png]]

*** [7.1.4] Ethernet frame fields
    - *minimum frame size is 65 bytes*
    - expected *maximum is 1518*
    - *from destination MAC address field to FCS*, the preamble field is not included

**** Collision fragment/runt frame
    - frames less than 64 bytes
    - is dropped
      
**** jumbo/baby giant frames
    - frames *> 1500 bytes of data*
    - is dropped

**** Ethernet Frame Fields
    [[./media/framefield.png]]
    

**** Ethernet frame fields detail
| Field                                     | Description                                                                                 |
|-------------------------------------------+---------------------------------------------------------------------------------------------|
| preamble and start frame delimeter fields | *7 bytes (preamble) + 1 byte (start of frame) = 8 bytes*                                    |
|                                           | used for schronization between the sengin and receiving devices                             |
|                                           | used to get the attention of the receiving nodes                                            |
|                                           | tell receivers to get ready to receive a new frame                                          |
|-------------------------------------------+---------------------------------------------------------------------------------------------|
| destinatin MAC address field              | *6 bytes*                                                                                   |
|                                           | identifier of the intended recipient                                                        |
|                                           | helps determine if the frame is addressed to them                                           |
|                                           | compared to the MAC address of the receiving device, match then accept the frame, else drop |
|                                           | can be a unicast, multicast, or broadcast address                                           |
|-------------------------------------------+---------------------------------------------------------------------------------------------|
| source MAC address field                  | *6 bytes*                                                                                   |
|                                           | indentifies the originating NIC                                                             |
|-------------------------------------------+---------------------------------------------------------------------------------------------|
| type/length                               | *2 bytes*                                                                                   |
|                                           | identifies the upperlayer protocol encapsulated in the ethernet frame                       |
|                                           | 0x0800 IPv4                                                                                 |
|                                           | 0x86DD IPv6                                                                                 |
|                                           | 0x806 ARP                                                                                   |
|                                           | a.k.a. EtherType, Type, or Length                                                    |
|-------------------------------------------+---------------------------------------------------------------------------------------------|
| data field                                | *46 - 1500 bytes*                                                                           |
|                                           | contains the encapsulated data froma higher level                                           |
|                                           | pads are used to increase size if it is a runt frame                                        |
|-------------------------------------------+---------------------------------------------------------------------------------------------|
| frame check sequence field                | *4 bytes*                                                                                   |
|                                           | used to detect errors in a frame                                                            |
|                                           | uses CRC, included when the frame is sent                                                   |
|                                           | when received, generates a new CRC and compares                                             |
|                                           | if not a match, indicates data has been changed, else accepted                              |
